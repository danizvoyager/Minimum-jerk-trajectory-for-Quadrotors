clear;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Trajectory generation point wise
% Define points
points = [
    0, 0, 0;   % p0
    0, 0, 10;   % p1
   -2,-2, 10;   % p2
   -4, 0, 5;   % p3
   -5, 1, 5;   % p4
    0, 0, 5;   % p5
    1,-1, 5;   % p6
    2, 0, 5;   % p7
    1, 1, 5;   % p8
    0, 0, 6;   % p9
    0, 0, 0;   % p10  
];
% Extract x, y, and z coordinates
x = points(:, 1)';
y = points(:, 2)';
z = points(:, 3)';
%determine initial and final points for each segment
a_x=x(1,1:(length(x)-1));       
a_y=y(1,1:(length(y)-1));      
a_z=z(1,1:(length(z)-1));
b_x=x(1,2:length(x));          
b_y=y(1,2:length(y));        
b_z=z(1,2:length(z));
[a_theta,a_phi,a_si]=deal(zeros(1,length(a_x)));
[b_theta,b_phi,b_si]=deal(zeros(1,length(a_x)));
%determine required time for each segment and total required time
T_r=abs([b_x-a_x; b_y-a_y; b_z-a_z;b_phi-a_phi;b_theta-a_theta;b_si-a_si]);
T=10*max(T_r);
T_s=sum(T);
% Initialize T_r with the first element of T
T_r = zeros(1, length(T));
% Calculate cumulative sums for T_r (time segment)
for i = 1:length(T)
    T_r(i) = sum(T(1:i));
end
%linearized model 
g=9.81;
m=0.5;
[Jx,Jy,Jz]=deal(0.1);
kx=1.5;
ky=0.1;
kz=1.9;
Jr=6e-5;
omega_r=0.025;
s=Jr*omega_r;
A=[0  1     0  0     0  0     0  0     0  0     0  0; 
   0 -kx/m  0  0     0  0     0  0     g  0     0  0;
   0  0     0  1     0  0     0  0     0  0     0  0;
   0  0     0 -ky/m  0  0    -g  0     0  0     0  0;
   0  0     0  0     0  1     0  0     0  0     0  0;
   0  0     0  0     0 -kz/m  0  0     0  0     0  0;
   0  0     0  0     0  0     0  1     0  0     0  0;
   0  0     0  0     0  0     0  0     0 -s/Jx  0  0;
   0  0     0  0     0  0     0  0     0  1     0  0;
   0  0     0  0     0  0     0  s/Jy  0  0     0  0;
   0  0     0  0     0  0     0  0     0  0     0  1;
   0  0     0  0     0  0     0  0     0  0     0  0];
B=[  0         0    0     0;
     0         0    0     0;
     0         0    0     0;
     0         0    0     0;
     0         0    0     0;
    1/m        0    0     0;
     0         0    0     0;
     0        1/Jx  0     0;
     0         0    0     0;
     0         0    1/Jy  0;
     0         0    0     0;
     0         0    0    1/Jz];
 C=[1 0  0 0  0 0  0 0  0 0  0 0;
    0 0  1 0  0 0  0 0  0 0  0 0;
    0 0  0 0  1 0  0 0  0 0  0 0;
    0 0  0 0  0 0  1 0  0 0  0 0;
    0 0  0 0  0 0  0 0  1 0  0 0;
    0 0  0 0  0 0  0 0  0 0  1 0];
[rowb,colb]=size(B);
[rowc,colc]=size(C);
D=zeros(rowc,colb);
Co=rank(ctrb(A,B));
Ov=rank(obsv(A,C));
% Q=1000*eye(12);
Q=1000*C'*C;
R=1;
k_lqr=lqr(A,B,Q,R);
k_o=-pinv(C*pinv(A-B*k_lqr)*B);